name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: flask-hello

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  docker:
    runs-on: ubuntu-latest
    needs: test 
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: clarkchenme/flask-hello:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # deplooy
  #     - name: test
  #       run: echo  ${{ secrets.HOST }}

  #     - name: executing remote ssh commands using password
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host:  ${{ secrets.HOST }}
  #         username:  ${{ secrets.SSH_USER }} 
  #         password:  ${{ secrets.SSH_USER_PWD }}
  #         port: 22
  #         script: |
  #           docker container stop $(docker container ls|awk '/flask/{print $1}')
  #           docker run -p 5000:5000 clarkchenme/flask-hello -d